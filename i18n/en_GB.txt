###version_ss
6D6 Compatibility Tools Version %s (%s)

###invalid_cut
Invalid value for '--cut'.
###invalid_start_time
Invalid value for '--start-time'.
###invalid_end_time
Invalid value for '--end-time'.
###could_not_open_ss
Could not open '%s': %s.
###could_not_open_logfile_s
Could not open logfile: %s.
###invalid_station_code
Please specify a station code of 1 to 5 alphanumeric characters with --station=CODE.
###invalid_channel_names
Channel names must be between 1 and 3 alphanumeric characters.
###too_many_channel_names
Too many channel names.
###need_name_for_every_channel
When specifying channel names, you must give a name for every channel.
###invalid_output_template_c
Error in output template: %%%c is not a valid placeholder!
###processing_s
Processing '%s'.
###out_of_memory
Out of memory!
###io_error
I/O error!
###io_error_d
I/O error (%d)!
###created_file_s
Created file '%s'.
###could_not_create_file_ss
Could not create file '%s': %s.
###malformed_6d6_header
Malformed 6D6 header!
###comment_too_long
The comment is too long to fit into the header.
###could_not_restore_uid
Error while restoring user id.
###using_channel_mapping
Using Channel Mapping:
####label_blank
           :
####label_6d6_sn
    6D6 S/N:
####label_start_time
 Start Time:
####label_end_time
   End Time:
####label_sync_time
  Sync Time:
####label_skew_time
  Skew Time:
####label_skew
       Skew:
####label_duration
   Duration:
####label_sample_rate
Sample Rate:
####label_channels
   Channels:
####label_size
       Size:
####label_comment
    Comment:
####gain
Gain
####errno_eacces
Permission denied
####errno_eagain
The operation would block
####errno_edquot
Quota exhausted
####errno_eexist
The target already exists
####errno_einval
Invalid argument
####errno_enoent
No such file or directory
###need_argument_long_s
Option '--%s' needs an argument.
###need_argument_short_c
Option '-%c' needs an argument.
###unrecognised_long_s
Unrecognised option '--%s'.
###unrecognised_short_c
Unrecognised option '-%c'.
###unexpected_argument_s
Option '--%s' expects no argument.
###leapsec_outdated

############################################################
#                     !!! WARNING !!!                      #
#         The leapsecond information is outdated.          #
#         Please download the newest release here:         #
#      https://github.com/KUM-Kiel/6d6-compat/releases     #
############################################################

###skew_ignored_warning
Warning: You have chosen to deactivate the skew correction.
This is almost certainly a bad idea unless you know exactly what you want
to achieve.
###usage_6d6mseed_s
6d6mseed
========

The program '6d6mseed' is used to convert raw data from the 6D6 datalogger
into the MiniSEED format.

Usage
-----

  %s [options] input.6d6

Options
-------

--station=CODE

  Set the MiniSEED station code to CODE. The station code is required for
  MiniSEED generation. It can contain between one and five alphanumeric
  ASCII characters.

--location=CODE

  Set the location to CODE. This should usually be a two character code.

--network=CODE

  Set the network code to CODE. This is a two character code assigned by IRIS.

--channels=C1,C2,...

  Rename the channels. When using this option, you have to give a new name for
  every channel which is between 1 and 3 alphanumeric characters. The names
  must be seperated by commas without spaces.

--output=FILENAME_TEMPLATE

  Set a template for output files. The template string may contain the following
  placeholders:

    %%y - Year
    %%m - Month
    %%d - Day
    %%h - Hour
    %%i - Minute
    %%s - Second
    %%S - Station Code
    %%L - Location
    %%C - Channel
    %%N - Network
    %%j - Julian Day

  The default value is 'out/%%S/%%y-%%m-%%d-%%C.mseed'.

--cut=SECONDS

  Cut the data in files of SECONDS. The default value is 86400, i.e. one day.

--no-cut

  Do not cut the MiniSEED files and produce one big file per channel.

--start-time=TIME
--end-time=TIME

  Limit the conversion to the time between start and end.
  If these options are used, the resulting MiniSEED files will not include any
  samples before the given start time and no samples after the given end time.

  The default values are the beginning and ending of the recording.

  The times must be given as ISO string, i.e. 'YYYY-MM-DDTHH:MM:SSZ'.

--logfile=FILE

  Create a logfile at FILE.
  The logfile contains all important information regarding recording data
  and created files. It also lists errors which occured during processing.

--auxfile=FILE

  Create a CSV file with auxiliary data at FILE.
  The auxfile contains engineering data like the temperature and battery
  voltage.

--ignore-skew

  Do not use the second synchronisation. This will on average double the timing
  error and thus will always print a warning and should not be used.

--resample

  Do skew correction by resampling the data to the nominal sampling frequency.

Examples
--------

Convert the file 'ST007.6d6' to MiniSEED using default values.

  $ 6d6mseed --station=ST007 ST007.6d6

Convert the file 'ST007.6d6' specifying everything.

  $ 6d6mseed ST007.6d6 \
      --station=ST007 \
      --network=XX \
      --output=%%N/%%S/%%y-%%m-%%d-%%C.mseed

###usage_6d6info_s
6d6info
=======

The program '6d6info' shows some information about a 6D6 recording.
You can either use it on a StiK or SD card or to get some information
about a .6d6 file on your hard drive.

Usage
-----

  %s [options] /dev/sdX1

The parameter is the file or device you want to inspect.

Options
-------

--json

  Output JSON instead of formatted text.

Examples
--------

Inspect the StiK in '/dev/sdb1':

  $ 6d6info /dev/sdb1

Inspect the file 'station-007.6d6' in the directory 'line-001':

  $ 6d6info line-001/station-007.6d6

###usage_6d6copy_s
6d6copy
=======

The program '6d6copy' makes a perfect copy of a StiK or 6D6 SD card
to a file.
This is a great backup mechanism and you can use the .6d6 files as a
starting point for arbitrary data analysis methods.

Usage
-----

  %s [options] /dev/sdX1 out.6d6

The first argument is the source of the data. This is normally your
StiK or SD card device like '/dev/sdb1' or '/dev/mmcblk0p1'.
The second argument is the file to which the copy will be made.
This file should have a .6d6 ending to identify it as 6D6 raw data.

When you start the program and the input and output files are valid,
the copy operation begins and the progress is shown on the terminal.
To suppress that progress display you can use the flags '-q' or
'--no-progress'. This might be useful in automated scripts.

Options
-------

--append-comment=TEXT

  Append the given text to the comment header. If the text contains a backslash
  it escapes the next character. You can write \n to insert a newline and \\ to
  insert a literal backslash.

-q
--no-progress

  Suppresses the progress display.

--json-progress

  Output progress in form of JSON messages. Each message is on one line.
  This makes the progress output got to STDOUT instead of STDERR.

Examples
--------

Archive the StiK in '/dev/sdb1' to a backup hard drive.

  $ 6d6copy /dev/sdb1 /media/Backup/Experiment-003/Station-007.6d6

Copy the SD card in '/dev/mmcblk0p1' to the current directory.

  $ 6d6copy /dev/mmcblk0p1 Station-013.6d6

###usage_6d6read_s
6d6read
=======

The program '6d6read' is used to convert raw data from the 6D6 datalogger
into the Send2X format.
This is useful if you still have a lot of old dataloggers and want to use
a uniform method of data analysis.

Usage
-----

  %s [-q|--no-progress] < in.6d6 > out.s2x

The input file is a .6d6 file and is written with an opening angle bracket '<'.
The output file will be a .s2x file and is preceded by a closing angle
bracket '>'.

If the input file is a valid .6d6 file, the conversion process will begin and
the progress will be reported to the terminal. If you want to suppress the
progress display, you can use the flag '-q' or '--no-progress'. This might be
useful in automated scripts.

Examples
--------

Convert the file 'station-007.6d6' to Send2X format:

  $ 6d6read < station-007.6d6 > station-007.s2x

Convert the file 'x.6d6' to 'y.s2x' and suppress the progress display:

  $ 6d6read --no-progress < x.6d6 > y.s2x
