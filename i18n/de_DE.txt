###version_ss
6D6 Compatibility Tools Version %s (%s)

###invalid_cut
Ungültiger Wert für '--cut'.
###invalid_start_time
Ungültiger Wert für '--start-time'.
###invalid_end_time
Ungültiger Wert für '--end-time'.
###could_not_open_ss
Konnte '%s' nicht öffnen: %s.
###could_not_open_logfile_s
Konnte Logdatei nicht öffnen: %s.
###invalid_station_code
Bitte geben Sie einen Stationscode von 1 bis 5 alphanumerischen Zeichen mit
--station=CODE an.
###invalid_channel_names
Kanalnamen müssen aus 1 bis 3 alphanumerischen Zeichen bestehen.
###too_many_channel_names
Zu viele Kanalnamen angegeben.
###need_name_for_every_channel
Es muss für jeden Kanal ein Name angegeben werden.
###processing_s
Verarbeite '%s'.
###out_of_memory
Arbeitsspeicher ist voll!
###io_error
I/O-Fehler!
###io_error_d
I/O-Fehler (%d)!
###created_file_s
Datei '%s' erstellt.
###could_not_create_file_ss
Konnte Datei '%s' nicht erstellen: %s.
###malformed_6d6_header
Beschädigter 6D6-Header!
###comment_too_long
Der Kommentar passt nicht in den 6D6-Header.
###could_not_restore_uid
Beim Wiederherstellen der User-ID ist ein Fehler aufgetreten.
###using_channel_mapping
Benutze folgende Kanalzuordnungen:
####label_blank
           :
####label_6d6_sn
    6D6 S/N:
####label_start_time
  Startzeit:
####label_end_time
    Endzeit:
####label_sync_time
  Sync-Zeit:
####label_skew_time
  Skew-Zeit:
####label_skew
       Skew:
####label_duration
      Dauer:
####label_sample_rate
 Abtastrate:
####label_channels
     Kanäle:
####label_size
 Dateigröße:
####label_comment
  Kommentar:
####gain
Gain
####errno_eacces
Zugriff verweigert
####errno_eagain
Die Operation würde blockieren
####errno_edquot
Das Kontingent wurde ausgeschöpft
####errno_eexist
Das Ziel existiert bereits
####errno_einval
Ungültiges Argument
####errno_enoent
Die Datei oder das Verzeichnis existiert nicht
###need_argument_long_s
Die Option '--%s' benötigt ein Argument.
###need_argument_short_c
Die Option '-%c' benötigt ein Argument.
###unrecognised_long_s
Unbekannte Option '--%s'.
###unrecognised_short_c
Unbekannte Option '-%c'.
###unexpected_argument_s
Die Option '--%s' benötigt kein Argument.
###leapsec_outdated

############################################################
#                     !!! WARNUNG !!!                      #
#  Die Schaltsekundeninformation ist nicht mehr aktuell.   #
#    Bitte laden Sie die neuste Version hier herunter:     #
#     https://github.com/KUM-Kiel/6d6-compat/releases      #
############################################################

###skew_ignored_warning
Warnung: Die Skew-Korrektur ist ausgeschaltet.
Dies ist in fast allen Fällen eine schlechte Idee und sollte nur verwendet
werden, wenn man genau weiß, was man erreichen möchte.
###usage_6d6mseed_s
6d6mseed
========

Das Programm '6d6mseed' konvertiert Rohdaten des 6D6-Datenloggers in das
MiniSEED-Format.

Verwendung
----------

  %s [Optionen] input.6d6

Optionen
--------

--station=CODE

  Setzt den MiniSEED-Stationscode auf CODE. Der Stationscode ist für die
  MiniSEED-Erzeugung zwingend erforderlich. Er besteht aus 1 bis 5 alpha-
  numerischen ASCII-Zeichen.

--location=CODE

  Setzt den Location-Code auf CODE. Der Location-Code besteht aus zwei Zeichen
  und kann benutzt werden um mehrere Sensoren an einer Station zu unterscheiden.

--network=CODE

  Setzt den Network-Code auf CODE. Dies ist ein zweistelliger Code, der vom
  IRIS vergeben wird.

--channels=C1,C2,...

  Benutzt abweichende Kanalnamen. Die Namen müssen aus 1 bis 3 alphanumerischen
  Zeichen bestehen und werden durch Kommata ohne Leerzeichen getrennt.
  Wenn diese Option benutzt wird, muss für jeden Kanal ein Name festgelegt
  werden.

--output=FILENAME_TEMPLATE

  Setzt ein Muster für Dateinamen. Im Muster können die folgenden Platzhalter
  verwendet werden:

    %%y - Jahr
    %%m - Monat
    %%d - Tag
    %%h - Stunde
    %%i - Minute
    %%s - Sekunde
    %%S - Stations-Code
    %%L - Location-Code
    %%C - Kanal
    %%N - Network-Code

  Der Standardwert ist 'out/%%S/%%y-%%m-%%d-%%C.mseed'.

--cut=SECONDS

  Schneidet die Daten in Stücke von SECONDS Sekunden. Der Standardwert ist
  86400, also ein Tag.

--no-cut

  Schaltet das Schneiden der MiniSEED-Dateien ab und erzeugt stattdessen eine
  große Datei pro Kanal.

--start-time=TIME
--end-time=TIME

  Begrenzt die konvertierung auf den angegebenen Zeitraum.
  Wenn diese Optionen benutzt werden, enthalten die erzeugten MiniSEED-Dateien
  keine Samples vor der angegebenen Startzeit oder nach der angegebenen Endzeit.

  Die Standardwerte sind der Anfang und das Ende der Aufzeichnung.

  Die Zeiten müssen als ISO-String angegeben werden, das heißt im Format
  'YYYY-MM-DDTHH:MM:SSZ'.

--logfile=FILE

  Erstellt eine Logdatei unter FILE.
  Die Logdatei enthält alle wichtigen Ereignisse, die während des Konvertierens
  auftreten. Das sind hauptsächlich allgemeine Informationen über die Daten,
  Namen von erstellten Dateien und eventuelle Fehler.

--auxfile=FILE

  Erstellt eine CSV-Datei mit zusätzlichen Daten unter FILE.
  Die CSV-Datei enthält die Statusdaten des Datenloggers, wie z.B. Temperatur
  oder Batteriespannung.

--ignore-skew

  Die zweite Synchronisierung wird nicht verwendet. Der Zeitfehler wird
  hierdurch im Mittel verdoppelt, daher gibt diese Option immer eine Warnung aus
  und sollte nicht verwendet werden.

--resample

  Die Skew-Korrektur wird durchgeführt, indem die Daten auf die nominelle Samplerate
  resampled werden.

Beispiele
---------

Konvertiert die Datei 'ST007.6d6' mit den Standardeinstellungen nach MiniSEED.
Die Option '--station' wird immer benötigt!

  $ 6d6mseed --station=ST007 ST007.6d6

Konvertiert die Datei 'ST007.6d6' mit einem Network-Code und benutzerdefinierten
MiniSEED-Dateinamen.

  $ 6d6mseed ST007.6d6 \
      --station=ST007 \
      --network=XX \
      --output=%%N/%%S/%%y-%%m-%%d-%%C.mseed

###usage_6d6info_s
6d6info
=======

Das Programm '6d6info' zeigt Informationen zu einer 6D6-Aufnahme an.
Es kann entweder direkt mit einem StiK oder einer SD-Karte verwendet werden oder
Informationen über eine .6d6-Datei auf der Festplatte anzeigen.

Verwendung
----------

  %s [Optionen] /dev/sdX1

Der Parameter ist die Datei oder das Gerät, das untersucht werden soll.

Optionen
--------

--json

  Gibt JSON statt formatiertem Text aus.

Beispiele
---------

Zeigt Informationen zum StiK in '/dev/sdb1':

  $ 6d6info /dev/sdb1

Zeigt Informationen zur Datei 'station-007.6d6' im Ordner 'line-001':

  $ 6d6info line-001/station-007.6d6

###usage_6d6copy_s
6d6copy
=======

Das Programm '6d6copy' erstellt eine 1:1-Kopie eines StiKs oder einer SD-Karte
in eine .6d6-Datei.
Eine .6d6-Datei ist besonders für Backups geeignet, da sie alle Rohdaten in
unveränderter Form enthält. Sie ist somit auch prädestinierter Startpunkt für
beliebige Datenanalysen und Konvertierungen.

Verwendung
----------

  %s [Optionen] /dev/sdX1 out.6d6

Der erste Parameter ist die Quelldatei. Dies ist normalerweise der Gerätepfad
des StiKs oder der SD-Karte und sieht ähnlich aus wie '/dev/sdb1' oder
'/dev/mmcblk0p1'.
Der zweite Parameter ist der Dateiname, unter dem die Kopie gespeichert werden
soll. Diese Datei sollte am besten die Endung '.6d6' haben, um sie als
6D6-Rohdaten-Datei zu identifizieren.

Wenn Eingabe- und Ausgabedatei gültig sind, beginnt der Kopiervorgang und der
Fortschritt wird im Terminal angezeigt. Um die Ausgabe z.B. für automatisierte
Scripts zu unterdrücken, kann die Option '-q' bzw. '--no-progress' verwendet
werden.

Optionen
--------

--append-comment=TEXT

  Hängt den angegebenen Text an den Kommentar-Header an. Wenn der Text
  Backslashes enthält, wird das nächste Zeichen speziell behandelt.
  Man kann \n schreiben, um einen Zeilenumbruch zu erzeugen und \\ für einen
  Backslash.

-q
--no-progress

  Unterdrückt die Fortschrittsanzeige.

--json-progress

  Die Fortschrittsanzeige erfolt in Form von JSON-Nachrichten. Jede Nachricht
  wird durch einen Zeilenumbruch abgeschlossen. Die Ausgabe erfolgt nach STDOUT
  statt nach STDERR.

Beispiele
---------

Archiviert den StiK in '/dev/sdb1' auf eine Backup-Festplatte.

  $ 6d6copy /dev/sdb1 /media/Backup/Experiment-003/Station-007.6d6

Kopiert die SD-Karte in '/dev/mmcblk0p1' ins aktuelle Verzeichnis.

  $ 6d6copy /dev/mmcblk0p1 Station-013.6d6

###usage_6d6read_s
6d6read
=======

Das Programm '6d6read' konvertiert Rohdaten vom 6D6-Datenlogger in das
Send2X-Format.
Dies kann nützlich sein, wenn noch eine große Anzahl von alten Datenloggern
vorhanden ist und eine einheitliche Datenverarbeitung gewünscht ist.

Verwendung
----------

  %s [-q|--no-progress] < in.6d6 > out.s2x

Die Eingabedatei ist eine .6d6-Datei und wird mit einer öffnenden spitzen
Klammer angegeben '<'.
Die Ausgabedatei ist eine .s2x-Datei und wird mit einer schließenden spitzen
Klammer angegeben '>'.

Wenn Eingabedatei eine gültige .6d6-Datei ist, beginnt der Konvertierungs-
vorgang und der Fortschritt wird im Terminal angezeigt. Um die Ausgabe z.B. für
automatisierte Scripts zu unterdrücken, kann die Option '-q' bzw.
'--no-progress' verwendet werden.

Beispiele
---------

Konvertiert die Datei 'station-007.6d6' ins Send2X-Format:

  $ 6d6read < station-007.6d6 > station-007.s2x

Konvertiert die Datei 'x.6d6' nach 'y.s2x' ohne Fortschrittsanzeige:

  $ 6d6read --no-progress < x.6d6 > y.s2x
